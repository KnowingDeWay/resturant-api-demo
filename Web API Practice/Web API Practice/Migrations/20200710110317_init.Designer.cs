// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_API_Practice.DataAccess;

namespace Web_API_Practice.Migrations
{
    [DbContext(typeof(ResturantReviewDBContext))]
    [Migration("20200710110317_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Web_API_Practice.Models.Resturant", b =>
                {
                    b.Property<int>("ResturantId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("ResturantDescription");

                    b.Property<byte[]>("ResturantImage");

                    b.Property<string>("ResturantName");

                    b.Property<string>("ResturantOwnerName");

                    b.Property<float>("ResturantStarRating");

                    b.Property<int>("ResturantType");

                    b.HasKey("ResturantId");

                    b.ToTable("Resturants");
                });

            modelBuilder.Entity("Web_API_Practice.Models.ResturantReview", b =>
                {
                    b.Property<int>("ResturantReviewId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfUsersVerfied");

                    b.Property<int?>("ResturantId");

                    b.Property<int?>("ResturantReviewId1");

                    b.Property<int?>("ReviewAuthorUserId");

                    b.Property<DateTime>("ReviewDate");

                    b.Property<byte[]>("ReviewImage");

                    b.Property<float>("ReviewScore");

                    b.Property<string>("ReviewText");

                    b.Property<bool>("Verified");

                    b.HasKey("ResturantReviewId");

                    b.HasIndex("ResturantId");

                    b.HasIndex("ResturantReviewId1");

                    b.HasIndex("ReviewAuthorUserId");

                    b.ToTable("ResturantReviews");
                });

            modelBuilder.Entity("Web_API_Practice.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityOfResidence");

                    b.Property<string>("CountryOfResidence");

                    b.Property<string>("Password");

                    b.Property<string>("ProfileDescription");

                    b.Property<int>("TotalActiveReviews");

                    b.Property<int>("TotalReviews");

                    b.Property<string>("UserName");

                    b.Property<byte[]>("UserProfileImage");

                    b.Property<int>("UserReputationRating");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Web_API_Practice.Models.Resturant", b =>
                {
                    b.OwnsOne("Web_API_Practice.Models.FormalAddress", "ResturantAddress", b1 =>
                        {
                            b1.Property<int>("ResturantId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("AddressApartmentNumber");

                            b1.Property<string>("AddressBuildingNumber");

                            b1.Property<string>("AddressCityName");

                            b1.Property<string>("AddressCountryName");

                            b1.Property<string>("AddressPostcode");

                            b1.Property<string>("AddressStateName");

                            b1.Property<string>("AddressStreetName");

                            b1.Property<string>("AddressSuburbName");

                            b1.HasKey("ResturantId");

                            b1.ToTable("Resturants");

                            b1.HasOne("Web_API_Practice.Models.Resturant")
                                .WithOne("ResturantAddress")
                                .HasForeignKey("Web_API_Practice.Models.FormalAddress", "ResturantId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Web_API_Practice.Models.ResturantReview", b =>
                {
                    b.HasOne("Web_API_Practice.Models.Resturant")
                        .WithMany("ResturantReviews")
                        .HasForeignKey("ResturantId");

                    b.HasOne("Web_API_Practice.Models.ResturantReview")
                        .WithMany("Replies")
                        .HasForeignKey("ResturantReviewId1");

                    b.HasOne("Web_API_Practice.Models.User", "ReviewAuthor")
                        .WithMany()
                        .HasForeignKey("ReviewAuthorUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
